{
  "swagger" : "2.0",
  "info" : {
    "version" : "0.1.0",
    "title" : "MONICA COP API"
  },
  "host" : "portal.monica-cloud.eu",
  "basePath" : "/cop/api",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/observation" : {
      "post" : {
        "tags" : [ "Observation" ],
        "description" : "add a new wearable",
        "parameters" : [ {
          "in" : "body",
          "name" : "thingid",
          "description" : "thing observation",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Observation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/observations" : {
      "get" : {
        "tags" : [ "Observation" ],
        "description" : "list all observations",
        "parameters" : [ {
          "name" : "thingId",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "datastreamID",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GetObservationListResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/observations/{thingId}" : {
      "get" : {
        "tags" : [ "Observation" ],
        "description" : "get observation by id",
        "parameters" : [ {
          "name" : "thingId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Observation"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Observation" ],
        "description" : "delete observation by id",
        "parameters" : [ {
          "name" : "thingId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/wearable" : {
      "post" : {
        "tags" : [ "Wearable" ],
        "description" : "add a new wearable",
        "parameters" : [ {
          "in" : "body",
          "name" : "name",
          "description" : "name of wearable",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Wearable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/wearables" : {
      "get" : {
        "tags" : [ "Wearable" ],
        "description" : "lista all wearables",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GetWearableListResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/wearables/{id}" : {
      "get" : {
        "tags" : [ "Wearable" ],
        "description" : "get wearable by id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Wearable"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Wearable" ],
        "description" : "update Wearable",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updates",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Wearable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Wearable" ],
        "description" : "delete wearable by id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/thing" : {
      "post" : {
        "tags" : [ "Thing" ],
        "description" : "add a new thing",
        "parameters" : [ {
          "in" : "body",
          "name" : "name",
          "description" : "name of thing",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Thing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/things" : {
      "get" : {
        "tags" : [ "Thing" ],
        "description" : "lista all things",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GetThingListResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/things/{id}" : {
      "get" : {
        "tags" : [ "Thing" ],
        "description" : "get thing by id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Thing"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Thing" ],
        "description" : "update Thing",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updates",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Thing"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Thing" ],
        "description" : "delete thing by id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/person" : {
      "post" : {
        "tags" : [ "Person" ],
        "description" : "add a new agent",
        "parameters" : [ {
          "in" : "body",
          "name" : "fullName",
          "description" : "Users full name",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Person"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/persons" : {
      "get" : {
        "tags" : [ "Person" ],
        "description" : "Get all agents",
        "parameters" : [ {
          "name" : "role",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "POLICE", "GUARD", "CREW", "PARAMEDICS" ]
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GetPersonListResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/person/{id}" : {
      "get" : {
        "tags" : [ "Person" ],
        "description" : "get agents by id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Person"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Person" ],
        "description" : "update person",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updates",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Person"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Person" ],
        "description" : "delete person by id",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/GeneralResponse"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/swagger" : {
      "x-swagger-pipe" : "swagger_raw"
    }
  },
  "definitions" : {
    "Person" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Person id"
        },
        "fullName" : {
          "type" : "string",
          "description" : "Person name"
        },
        "phone" : {
          "type" : "string",
          "description" : "Person phone number"
        },
        "email" : {
          "type" : "string",
          "description" : "Person email address"
        },
        "role" : {
          "type" : "string",
          "description" : "Person role (e.g. GUARD, CREW, PARAMEDIC,POLICE)"
        },
        "active" : {
          "type" : "boolean",
          "description" : "Person active? "
        }
      },
      "example" : {
        "role" : "role",
        "phone" : "phone",
        "fullName" : "fullName",
        "active" : true,
        "id" : 0,
        "email" : "email"
      }
    },
    "Thing" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Thing id"
        },
        "name" : {
          "type" : "string",
          "description" : "Thing name"
        },
        "descriptiom" : {
          "type" : "string",
          "description" : "Thing description"
        },
        "thingtype" : {
          "type" : "integer",
          "description" : "Thing type"
        },
        "thingTemplate" : {
          "type" : "string",
          "description" : "Thing template"
        },
        "status" : {
          "type" : "integer",
          "description" : "Thing status"
        },
        "lat" : {
          "type" : "number",
          "description" : "Thing latitude"
        },
        "lont" : {
          "type" : "number",
          "description" : "Thing latitude"
        }
      },
      "example" : {
        "name" : "name",
        "thingtype" : 6,
        "id" : 0,
        "thingTemplate" : "thingTemplate",
        "lont" : 5.63737665663332876420099637471139430999755859375,
        "descriptiom" : "descriptiom",
        "lat" : 5.962133916683182377482808078639209270477294921875,
        "status" : 1
      }
    },
    "Observation" : {
      "type" : "object",
      "properties" : {
        "thingId" : {
          "type" : "integer",
          "description" : "Thing id"
        },
        "datastreamId" : {
          "type" : "string",
          "description" : "Datastream id"
        },
        "phenomenTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "phenomen time"
        },
        "observationResult" : {
          "type" : "string",
          "description" : "The latest observation"
        }
      },
      "example" : {
        "datastreamId" : "datastreamId",
        "observationResult" : "observationResult",
        "phenomenTime" : "2000-01-23T04:56:07.000+00:00",
        "thingId" : 0
      }
    },
    "GetPersonListResponse" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Person"
      }
    },
    "GetThingListResponse" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Thing"
      }
    },
    "GetWearableListResponse" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Wearable"
      }
    },
    "GetObservationListResponse" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Observation"
      }
    },
    "Wearable" : {
      "type" : "object",
      "properties" : {
        "personId" : {
          "type" : "integer",
          "description" : "Person id"
        },
        "thingId" : {
          "type" : "integer",
          "description" : "Thing ID"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "time of wearable connection (e.g. '2016-06-17T15:28:34Z' (RFC 3339, ISO 8601))"
        }
      },
      "example" : {
        "personId" : 0,
        "thingId" : 6,
        "timestamp" : "2000-01-23T04:56:07.000+00:00"
      }
    },
    "GeneralResponse" : {
      "type" : "object",
      "required" : [ "description", "success" ],
      "properties" : {
        "success" : {
          "type" : "boolean",
          "description" : "returns 1 if successful"
        },
        "description" : {
          "type" : "string",
          "description" : "a short comment"
        }
      },
      "example" : {
        "success" : true,
        "description" : "description"
      }
    },
    "ErrorResponse" : {
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string"
        }
      }
    }
  }
}
